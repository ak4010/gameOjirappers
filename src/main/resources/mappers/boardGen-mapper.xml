<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardGenMapper">

	<resultMap type="BoardGen" id="resultBoard">
		<result column="board_no" property="board_no"/>
		<result column="board_title" property="board_title"/>
		<result column="board_content" property="board_content"/>
		<result column="board_date" property="board_date"/>
		<result column="board_count" property="board_count"/>
		<result column="board_like" property="board_like"/>
		<result column="board_orifile" property="board_orifile"/>
		<result column="board_refile" property="board_refile"/>
		<result column="appid" property="appid"/>
		<result column="user_id" property="user_id"/>
		<result column="board_notice" property="board_notice"/>
	</resultMap>

	<select id="selectList" parameterType="Paging" resultMap="resultBoard">
		<![CDATA[
		select *  
		from (select rownum rnum, board_no, board_title, board_content,
		            board_date, board_count, board_like, board_orifile,
		            board_refile, appid, user_id, board_notice
		    from (select * from tb_board_gen
		              order by board_no desc))
		where rnum >= #{ startRow } and rnum <= #{endRow} 
		]]>
	</select>
	
	<select id="selectOne" parameterType="_int" resultMap="resultBoard">
		select * from tb_board_gen
		where board_no = #{ board_no }
	</select>
	
	<select id="selectBoardByTitle" parameterType="string" resultMap="resultBoard">
		select * from tb_board_gen
		where board_title like '%' || #{ search } || '%'
		order by board_no desc
	</select>
	
	<select id="selectListCount" resultType="_int">
		select count(*) from tb_board_gen
	</select>
	
	<select id="selectRankTop5"></select>
	
	<insert id="insertBoard" parameterType="BoardGen">
		insert into tb_board_gen(BOARD_NO, board_title, BOARD_CONTENT, BOARD_DATE,
                BOARD_COUNT, BOARD_LIKE, BOARD_ORIFILE, BOARD_REFILE, APPID, USER_ID, BOARD_NOTICE)
		values((select max(board_no) + 1 from tb_board_gen),
				#{board_title}, #{board_content},
				sysdate, 0, 0,
				#{board_orifile},
				#{board_refile}, #{appid}, #{user_id}, null)
	</insert>
	
	<insert id="insertBoardLike"></insert>
	
	<update id="updateBoard" parameterType="BoardGen">
		update tb_board_gen
		set board_title = #{board_title},
		board_content = #{board_content},
		board_date = sysdate
		<if test="board_orifile != null">
				, board_orifile = #{ board_orifile }
				, board_refile = #{ board_refile }
			</if>
			<if test="board_orifile == null">
				, board_orifile = null
				, board_refile = null
		</if>
		where board_no = #{board_no}
	</update>
	
	<update id="updateBoardReadCount" parameterType="_int">
		update tb_board_gen
		set board_count = board_count + 1
		where board_no = #{ board_no }
	</update>
	
	<delete id="deleteBoard" parameterType="_int">
		delete from tb_board_gen
		where board_no = #{ board_no } 
	</delete>

	<!--댓글 insert-->
	<insert id="genReplyWrite" parameterType="Comment">
		insert into TB_COMMENT(COM_NO, COM_CONTENTS, COM_DATE, BOARD_NO, USER_ID, com_lev)
		values(seq_comment.nextval,#{com_contents}, sysdate, #{board_no}, #{user_id}, 0)
	</insert>

	<!-- 게시글 좋아요 정보 저장 -->
	<insert id="insertGenLike" parameterType="BoardLike">
		INSERT INTO TB_GENBOARD_LIKE (board_no, user_id, like_date)
		VALUES (#{board_no}, #{user_id}, sysdate)
	</insert>

	<delete id="deleteGenLike" parameterType="BoardLike">
		DELETE FROM TB_GENBOARD_LIKE
		WHERE BOARD_NO = #{board_no} AND USER_ID = #{user_id}
	</delete>

	<update id="updateGenLikedis" parameterType="_int">
		UPDATE TB_BOARD_GEN
		SET board_like = board_like - 1
		WHERE BOARD_NO = #{board_no}
	</update>

	<update id="updateGenLike" parameterType="_int">
		UPDATE TB_BOARD_GEN
		SET board_like = board_like + 1
		WHERE BOARD_NO = #{board_no}
	</update>

	<select id="selectGenLike" parameterType="BoardLike" resultType="_int">
		SELECT COUNT(*) FROM TB_GENBOARD_LIKE
		WHERE BOARD_NO = #{board_no} AND USER_ID = #{user_id}
	</select>

	<!--포인트 올리기-->
	<update id="updateUserPoint" parameterType="map">
		UPDATE TB_USER
		SET user_point = user_point + #{point}
		WHERE USER_ID = #{user_id}
	</update>
</mapper>