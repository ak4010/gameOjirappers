<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userMapper">
	<!-- 마이바티스 mybatis-config.xml 에 등록해야 별칭으로 사용할 수 있음 => 등록안할꺼면 사용구문을 모두 적으면 됨 -->

	<!-- 유저정보 저장용 -->
	<resultMap id="resultUser" type="User">
		<result column="user_id" 		        		property="user_id"/> 		                    <!-- 회원아이디 -->
		<result column="admin_id"		       		property="admin_id"	/>	                     	<!-- 관리자아이디 -->
		<result column="user_pwd"		        	property="user_pwd"/>		                    <!-- 회원비밀번호 -->
		<result column="user_nickname" 	        property="user_nickname" />	            <!--회원닉네임-->
		<result column="user_name" 		        	property="user_name"/> 		                <!--회원이름-->
		<result column="user_phone"		        	property="user_phone"	/>	                    <!--회원전화번호-->
		<result column="user_email"		        	property="user_email"	/>	                    <!--회원이메일-->
		<result column="user_birth"		        	property="user_birth" />		                <!--회원생일-->
		<result column="user_level" 	       		 	property="user_level"/> 	                    <!--회원등급-->
		<result column="user_status"	       		property="user_status"	/>                     <!--회원 활동상태-->
		<result column="ban_release_date"	       		property="ban_release_date"	/>                     <!--정지 해제일-->
		<result column="user_point" 	        		property="user_point" />	                    <!--보유포인트-->
		<result column="user_access"				property="user_access"/>						<!--접속기록-->
		<result column="user_original_profile"  property="user_original_profile" />  	<!--원본프로필이미지-->
		<result column="confirm_answer"         property="confirm_answer" />              <!--본인확인용 질문-->
		<result column="board_click_day" 		property="board_click_day"/> 				<!--즐찾한 날짜 ★가져올예정-->
		<result column="appid"  						property="appid" />					     		<!--즐찾한 게임정보번호★가져올예정-->
		<result column="bname" 						property="bname" />						     	<!--밴드 이름★가져올예정-->
		<result column="com_contents"				property="com_contents"	/>				    <!--내가 쓴 코멘트 제목★가져올예정-->
		<result column="board_title" 				property="board_title" />				     	<!--내가 쓴 글 제목★가져올예정-->
	</resultMap>
	
	<!-- 게임정보 즐겨찾기 -->
	<resultMap type="User" id="hotlist">
		<result property="favo_id" column="favo_id" />
		<result property="appid" column="appid" />
		<result property="user_id" column="user_id" />
		<result property="like_dt" column="like_dt" />
	</resultMap>

	<!-- 밴드 -->
	<resultMap type="CGroup" id="resultmybandtop5">
		<result property="communityid" column="communityid" />
		<result property="communityname" column="communityname" />
		<result property="communitydate" column="communitydate" />		
	</resultMap>

<!-- 즐찾 ////////////////////////////////////////////////////////////////////////////////////////////////  -->
	<!-- 즐찾등록  -->
	<select id="insertFavorite" resultMap="hotlist">
	<![CDATA[
	insert 
	into tb_hotlist (favo_id, appid, user_id, like_dt)
	values (favo_id_seq.NEXTVAL, #{ appid }, #{ user_id }, sysdate)
	]]>
	</select>



	<!-- 즐찾삭제  -->
	<delete id="deleteFavorite" parameterType="string">
	<![CDATA[
	delete
	from tb_hotlist
	where appid = #{ appid }
		and user_id = #{ user_id }
	]]>
	</delete>



	<!-- 즐찾 갯수조회 => 게임과 아이디매칭  -->
	<select id="selectFavoriteCount" resultMap="hotlist">
	<![CDATA[
	select count(favo_id)
	from tb_hotlist
	where appid = #{ appid }
		and user_id = #{ user_id }
	]]>
	</select>



<!--////////////////////////////////////////////////////////////////////////////////////////////////  -->

	<!-- mybandtop5 출력 처리용 -->
	<select id="mybandtop5" resultMap="resultmybandtop5">
		<![CDATA[
		select *
		from (select rownum rnum, communityid, communityname, communitydate
		        from (select * 
                from tb_community
                order by communitydate desc, communityid desc))
		where rnum >= 1 and rnum <= 5
		]]>
	</select>
	
	
	
	
	
	
	<!-- 회원탈퇴 처리용 -->
	<delete id="userDeleteMethod" parameterType="string">		<!-- insert & delete는 기본이 int로 리턴하기때문에  resultType이나 resultMap 작성할 수 없음 -->
		delete 
		from tb_user
		where user_id = #{ user_id }			<!-- 값 1개에 대한 변수적용은 변수이름 아무거나 해도 됨  (uid)  but, 여러개일때는 순서대로 똑같이 써줘야한다.-->
	</delete>


	<!-- 회원정보 수정용 -->
	<update id="updateUser" parameterType="User">		<!--전달받는값의 타입이 Member임  // 수정안된 값은 그냥 똑같이 덮어씌우기 하는거라고 생각하면 됨-->
		update tb_user
		set user_pwd= #{user_pwd},
			 user_phone= #{user_phone}, 
			 email= #{email},
		where user_id = #{user_id}		
	</update>

	

	
	<!-- 회원 전체 조회용 -->
	<select id = "selectUserList" parameterType="Paging" resultType="User">
	<![CDATA[
		select *
		from (select rownum rnum, USER_ID, ADMIN_ID, USER_NICKNAME, USER_NAME, USER_PHONE, 
			 USER_EMAIL, USER_BIRTH, USER_LEVEL, USER_STATUS, BAN_RELEASE_DATE, USER_POINT, USER_ACCESS, USER_ORIGINAL_PROFILE
			 from (select * from tb_user order by user_id desc))
		where rnum >= #{startRow} and rnum <= #{endRow}
		]]>
	</select>
	
	<select id="selectUserListCount" resultType="User">
		select * from tb_user
	</select>
	
	
	
	
	<!-- 로그인 처리용 -->
	<select id="selectUser"  parameterType="User"  resultMap="resultUser">		
      select * 
      from tb_user
      where user_id = #{ user_id }
	</select>

	
	
	
	<!-- 회원가입시 아이디 중복 체크 처리용  -->
	<select id="selectDupCheckId" parameterType="string" resultType="_int" >
		select count(user_id) 
		from tb_user
		where user_id = #{ user_id }	
	</select>		

	
	<!-- 회원가입시 닉네임 중복 체크 처리용  -->
	<select id="selectDupCheckNick" parameterType="string" resultType="_int" >
		select count(user_nickname) 
		from tb_user
		where user_nickname = #{ user_nickname }	
	</select>		
	
		
	<!-- 회원가입 처리용 -->
	<insert id="userInsertMethod" parameterType="User">			
		insert into tb_user (
			user_id, admin_id, user_pwd, user_nickname, user_name, user_phone, user_email, user_birth, 
			user_level, user_status, user_point, user_access, user_original_profile, confirm_answer) 
		values (
			#{user_id}, default, #{user_pwd}, #{user_nickname}, #{user_name}, #{user_phone}, #{user_email}, #{user_birth}, 
			default, default, default, default, default, default)
	</insert>
	
	<update id="updateBan" parameterType="User">
		update tb_user
		set user_status = #{user_status},
			 ban_release_date = #{ban_release_date}
		where user_id = #{user_id}
	</update>
	
	<update id="updateBanRelease" parameterType="User">
		update tb_user
		set user_status = #{user_status},
			 ban_release_date = #{ban_release_date}
		where user_id = #{user_id}
	</update>
	
	<update id="updateDecPoint">
		update tb_user
		set user_point = #{user_point},
			 user_level = #{user_level}
		where user_id = #{user_id}
	</update>
	
	<select id="selectSearchUID" parameterType="string" resultType="User">
		select * from tb_user
		where user_id like '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchUN" parameterType="string" resultType="User">
		select * from tb_user
		where user_nickname like '%' || #{keyword} || '%'
	</select>
	
	
	
	
	
	
	
	
	
	
	

</mapper>


